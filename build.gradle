plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id "org.gradlex.extra-java-module-info" version "1.4"
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'io.edpn.backend'
version = '0.0.1-SNAPSHOT'
description = 'Listener to consume the EDDN messages and store in Kafka'
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven {
        url 'https://nexus.edpn.io'
    }
}

ext {
    lombokVersion = '1.18.28'
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}


test {
    systemProperty "file.encoding", "utf-8"
    useJUnitPlatform()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).tap {
    configureEach {
        options.encoding = 'UTF-8'
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        backendUtil(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def nexusUsername = findProperty('edpnNexusUsername')
            def nexusPassword = findProperty('edpnNexusPassword')
            if (nexusUsername && nexusPassword) {
                credentials {
                    username = nexusUsername
                    password = nexusPassword
                }
            }
            if (version.endsWith('-SNAPSHOT')) {
                url 'https://nexus.edpn.io/repository/maven-snapshots/'
            } else {
                url 'https://nexus.edpn.io/repository/maven-releases/'
            }
        }
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
